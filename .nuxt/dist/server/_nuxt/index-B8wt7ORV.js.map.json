{"file":"index-B8wt7ORV.js","mappings":"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","names":["graph","_ssrRenderAttrs","_ssrInterpolate","_ssrRenderComponent"],"sources":["../../../../components/CardHeader.vue","../../../../node_modules/nuxt/dist/app/components/server-placeholder.js","../../../../node_modules/nuxt/dist/app/components/client-only.js","../../../../composables/useProfile.ts","../../../../pages/index.vue"],"sourcesContent":["<script setup>\r\nimport { storeToRefs } from 'pinia'; // import storeToRefs helper hook from pinia\r\nimport { useAuthStore } from '~/store/auth'; // import the auth store we just created\r\nconst { authenticated,grid3 } = storeToRefs(useAuthStore());\r\nconst picked = ref({group:''})\r\n\r\nwatch( \r\n    picked, (newValue) => \r\n    {\r\n        if (authenticated.value) {\r\n            console.log(grid3)\r\n        }\r\n    }\r\n)\r\n</script>\r\n\r\n<template>\r\n    <div v-if=\"authenticated\" class=\"card-header\">\r\n        <h4>Energy balance</h4>\r\n        <input type=\"radio\" id=\"day\" value=\"Diary\" v-model=\"picked\" />\r\n        <label for=\"day\">Diary</label>\r\n        <input type=\"radio\" id=\"month\" value=\"Monthly\" v-model=\"picked \" />\r\n        <label for=\"month\">Monthly</label>\r\n        <input type=\"radio\" id=\"year\" value=\"Annual\" v-model=\"picked\" />\r\n        <label for=\"year\">Annual</label>\r\n    </div>\r\n</template>","import { createElementBlock, defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"ServerPlaceholder\",\n  render() {\n    return createElementBlock(\"div\");\n  }\n});\n","import { cloneVNode, createElementBlock, createStaticVNode, defineComponent, getCurrentInstance, h, onMounted, provide, ref } from \"vue\";\nimport { isPromise } from \"@vue/shared\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { getFragmentHTML } from \"./utils.js\";\nimport ServerPlaceholder from \"./server-placeholder.js\";\nexport const clientOnlySymbol = Symbol.for(\"nuxt:client-only\");\nexport default defineComponent({\n  name: \"ClientOnly\",\n  inheritAttrs: false,\n  props: [\"fallback\", \"placeholder\", \"placeholderTag\", \"fallbackTag\"],\n  setup(_, { slots, attrs }) {\n    const mounted = ref(false);\n    onMounted(() => {\n      mounted.value = true;\n    });\n    if (import.meta.dev) {\n      const nuxtApp = useNuxtApp();\n      nuxtApp._isNuxtPageUsed = true;\n      nuxtApp._isNuxtLayoutUsed = true;\n    }\n    provide(clientOnlySymbol, true);\n    return (props) => {\n      if (mounted.value) {\n        return slots.default?.();\n      }\n      const slot = slots.fallback || slots.placeholder;\n      if (slot) {\n        return slot();\n      }\n      const fallbackStr = props.fallback || props.placeholder || \"\";\n      const fallbackTag = props.fallbackTag || props.placeholderTag || \"span\";\n      return createElementBlock(fallbackTag, attrs, fallbackStr);\n    };\n  }\n});\nconst cache = /* @__PURE__ */ new WeakMap();\n// @__NO_SIDE_EFFECTS__\nexport function createClientOnly(component) {\n  if (import.meta.server) {\n    return ServerPlaceholder;\n  }\n  if (cache.has(component)) {\n    return cache.get(component);\n  }\n  const clone = { ...component };\n  if (clone.render) {\n    clone.render = (ctx, cache2, $props, $setup, $data, $options) => {\n      if ($setup.mounted$ ?? ctx.mounted$) {\n        const res = component.render?.bind(ctx)(ctx, cache2, $props, $setup, $data, $options);\n        return res.children === null || typeof res.children === \"string\" ? cloneVNode(res) : h(res);\n      } else {\n        const fragment = getFragmentHTML(ctx._.vnode.el ?? null) ?? [\"<div></div>\"];\n        return createStaticVNode(fragment.join(\"\"), fragment.length);\n      }\n    };\n  } else if (clone.template) {\n    clone.template = `\n      <template v-if=\"mounted$\">${component.template}</template>\n      <template v-else><div></div></template>\n    `;\n  }\n  clone.setup = (props, ctx) => {\n    const nuxtApp = useNuxtApp();\n    const mounted$ = ref(nuxtApp.isHydrating === false);\n    const instance = getCurrentInstance();\n    if (nuxtApp.isHydrating) {\n      const attrs = { ...instance.attrs };\n      const directives = extractDirectives(instance);\n      for (const key in attrs) {\n        delete instance.attrs[key];\n      }\n      onMounted(() => {\n        Object.assign(instance.attrs, attrs);\n        instance.vnode.dirs = directives;\n      });\n    }\n    onMounted(() => {\n      mounted$.value = true;\n    });\n    const setupState = component.setup?.(props, ctx) || {};\n    if (isPromise(setupState)) {\n      return Promise.resolve(setupState).then((setupState2) => {\n        if (typeof setupState2 !== \"function\") {\n          setupState2 = setupState2 || {};\n          setupState2.mounted$ = mounted$;\n          return setupState2;\n        }\n        return (...args) => {\n          if (mounted$.value || !nuxtApp.isHydrating) {\n            const res = setupState2(...args);\n            return res.children === null || typeof res.children === \"string\" ? cloneVNode(res) : h(res);\n          } else {\n            const fragment = getFragmentHTML(instance?.vnode.el ?? null) ?? [\"<div></div>\"];\n            return createStaticVNode(fragment.join(\"\"), fragment.length);\n          }\n        };\n      });\n    } else {\n      if (typeof setupState === \"function\") {\n        return (...args) => {\n          if (mounted$.value) {\n            return h(setupState(...args), ctx.attrs);\n          }\n          const fragment = getFragmentHTML(instance?.vnode.el ?? null) ?? [\"<div></div>\"];\n          return createStaticVNode(fragment.join(\"\"), fragment.length);\n        };\n      }\n      return Object.assign(setupState, { mounted$ });\n    }\n  };\n  cache.set(component, clone);\n  return clone;\n}\nfunction extractDirectives(instance) {\n  if (!instance || !instance.vnode.dirs) {\n    return null;\n  }\n  const directives = instance.vnode.dirs;\n  instance.vnode.dirs = null;\n  return directives;\n}\n","const useProfile = () => {\r\n    const graph = async () => {\r\n        const T = ['3','132']\r\n        var  datos = []\r\n        //var value\r\n        for (let x in T){\r\n            const {pending,data} = await useFetch(//estaciones, 3 y 132\r\n            \"https://poweramigo.com/smr/api/get/\"+T[x]+\"/data?\"+\r\n            \"date_start=\"+\"2023-12-01\"+\r\n            \"&\"+\"time_start=\"+'12:00:00'+\r\n            \"&\"+\"date_end=2023-12-02\"+\r\n            \"&\"+\"units=\"+'P'+\r\n            \"&\"+\"interval=\"+'1hour'+\r\n            \"&\"+\"time_end=\"+'12:00:00',\r\n            {\r\n                method: \"GET\",\r\n                headers: {Authorization: 'Bearer'+' '+ document.cookie.split('=')[1]},\r\n            })\r\n            datos.push(data)\r\n        }\r\n        return datos\r\n    }\r\n    return {graph}\r\n}\r\nexport default useProfile","<script>\r\nimport { storeToRefs } from 'pinia'; // import storeToRefs helper hook from pinia\r\nimport { useAuthStore } from '~/store/auth'; // import the auth store we just created\r\nconst {graph} = useProfile()\r\nexport default {\r\n  data(){\r\n    return {\r\n      grid3:storeToRefs(useAuthStore()),\r\n      Tower_1:0,\r\n      Tower_2:0,\r\n      suma:0,\r\n      optionsProfileVisit: {\r\n        dataLabels: { enabled:true },\r\n        chart: { toolbar: { show: false }, type: 'bar',stacked: true, },\r\n        series: [{ name: 'Grid',data: [] },{ name: 'Solar',data: [] }],\r\n        colors: ['#004062','#FDC015'],\r\n        xaxis: { categories: [\"Tower 3\",\"Tower 132\"],},\r\n      }\r\n    }\r\n  },\r\n  computed:{\r\n    graph_api(){\r\n      return this.optionsProfileVisit.series\r\n    }\r\n  },\r\n  methods:{\r\n    async grafica() {\r\n      const datosMes = await graph()\r\n      if (datosMes[0]._rawValue === null) {return this.optionsProfileVisit.series} else {\r\n        datosMes[0]._rawValue.grid.map((valor) => {this.suma += valor.value})\r\n        this.optionsProfileVisit.series[0].data.push(this.suma)\r\n        this.Tower_1 = this.suma\r\n        this.suma = 0\r\n\r\n        datosMes[1]._rawValue.grid.map((valor) => {this.suma += valor.value/1000})\r\n        this.optionsProfileVisit.series[0].data.push(this.suma)\r\n        this.Tower_2 += this.suma\r\n        this.suma = 0\r\n\r\n        datosMes[0]._rawValue.generation.map((valor) => {this.suma += valor.value})\r\n        this.optionsProfileVisit.series[1].data.push(this.suma)\r\n        this.Tower_1 += this.suma\r\n        this.suma = 0\r\n\r\n        datosMes[1]._rawValue.generation.map((valor) => {this.suma += valor.value/1000})\r\n        this.optionsProfileVisit.series[1].data.push(this.suma)\r\n        this.Tower_2 += this.suma\r\n        this.suma = 0\r\n\r\n      }\r\n    }\r\n  },\r\n  mounted(){\r\n    this.grafica()\r\n  }\r\n}\r\n</script>\r\n<template>\r\n  <div>\r\n    <div class=\"page-heading\">\r\n        <h3>Energy Monitoring System</h3>\r\n    </div>\r\n    <div class=\"page-content\">\r\n        <section class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-6 col-lg-6 col-md-6\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body px-3 py-3\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-2\">\r\n                                        <div class=\"stats-icon\">\r\n                                          <span class=\"badge badge-pill badge-danger\">\r\n                                            <i class=\"bi bi-building\"></i><!---->\r\n                                          </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <h6 class=\"text-muted font-semibold\">Tower 3</h6>\r\n                                        <h6 class=\"font-extrabold mb-0\">{{ Tower_1  }}</h6>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-6 col-lg-6 col-md-6\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body px-3 py-3\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-2\">\r\n                                        <div class=\"stats-icon\">\r\n                                          <span class=\"badge badge-pill badge-danger\">\r\n                                            <i class=\"bi bi-building\"></i>\r\n                                          </span>                                            \r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <h6 class=\"text-muted font-semibold\">Tower 132</h6>\r\n                                        <h6 class=\"font-extrabold mb-0\">{{ Tower_2 }}</h6>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <div class=\"card\">\r\n                            <CardHeader></CardHeader>\r\n                            <div class=\"card-body\">\r\n                              <client-only>\r\n                                <apexchart height=\"200\" :options=\"optionsProfileVisit\" :series=\"graph_api\"> </apexchart>\r\n                              </client-only>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n"],"version":3}