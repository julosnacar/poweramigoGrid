{"file":"auth-Ca2gGnPf.js","mappings":";;;;;;;;;;;;;;;;;;;;AAEA,MAAA,OAAe,0BAA0B,CAAC,OAAO;AAC7C,QAAM,EAAE,cAAkB,IAAA,YAAY,aAAc,CAAA;AAC9C,QAAA,QAAQ,UAAU,OAAO;AAE/B,MAAI,MAAM,OAAO;AAEf,kBAAc,QAAQ;AAAA,EACxB;AAGA,MAAI,MAAM,UAAS,yBAAI,UAAS,SAAS;AACvC,WAAO,WAAW,GAAG;AAAA,EACvB;AAEA,MAAI,CAAC,MAAM,UAAS,yBAAI,UAAS,SAAS;AAExC,WAAO,WAAW,QAAQ;AAAA,EAC5B;AACF,CAAC;","names":[],"sources":["../../../../middleware/auth.ts"],"sourcesContent":["import { storeToRefs } from \"pinia\";\r\nimport { useAuthStore } from \"~/store/auth\";\r\nexport default defineNuxtRouteMiddleware((to) => {\r\n    const { authenticated } = storeToRefs(useAuthStore()); // make authenticated state reactive\r\n    const token = useCookie('token'); // get token from cookies\r\n  \r\n    if (token.value) {\r\n      // check if value exists\r\n      authenticated.value = true; // update the state to authenticated\r\n    }\r\n  \r\n    // if token exists and url is /login redirect to homepage\r\n    if (token.value && to?.name === 'login') {\r\n      return navigateTo('/');\r\n    }\r\n    // if token doesn't exist redirect to log in\r\n    if (!token.value && to?.name !== 'login') {\r\n      abortNavigation();\r\n      return navigateTo('/login');\r\n    }\r\n  });"],"version":3}